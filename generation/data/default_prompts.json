[{
  "_id": {
    "$oid": "6732fb8abb7182490b5d6554"
  },
  "test_name": "Performance and Load Testing",
  "test_prompt": "Acting as a senior ISTQB-certified test analyst, design a comprehensive performance and load testing scenario for a specified system. The scenario should aim to assess the system’s performance and load handling under realistic conditions, simulating user behaviors to evaluate how the system operates under various levels of stress. Clearly establish the purpose of the test, the preconditions required, and the environment configurations necessary to create accurate, real-world conditions. Outline the user load, including distribution and behavior patterns that reflect peak periods, random delays, and sudden surges. Identify key performance metrics such as response time, throughput, resource utilization, and error rates, detailing acceptable thresholds based on industry standards. Specify the data requirements to represent real-world usage, including edge cases, and present a clear, sequential process for test execution from setup to conclusion. Emphasize expected outcomes, define conditions for success and failure, and include guidelines for comprehensive logging and analysis. Ensure that the scenario aligns with ISTQB performance testing standards, incorporates best practices, and prioritizes precision, consistency, and robustness.",
  "test_scoring_elements_and_prompts": {
    "Test Scenario Quality Score": "Assign a score (1-5) based on the scenario’s relevance, depth, and clarity. A high-quality scenario should align well with the specified test purpose, providing a clear objective and structured approach. It should include all necessary elements such as preconditions, environment configuration, user load details, performance metrics, and expected outcomes.",
    "Output Alignment Score": "Evaluate how well the generated output aligns with the expected scenario type (1-5). This score should reflect the output’s adherence to a structured, ISTQB-like format for performance and load testing, including specified elements like response time, error rates, data requirements, and system behavior under stress.",
    "Consistency Score": "Rate the consistency (True/False) between the generated scenario, its objectives, and its category. A consistent scenario should maintain alignment across all elements, ensuring that the described testing steps, data requirements, and performance metrics match the intended category and testing standards for performance and load evaluation.",
    "Detail and Specificity Score": "Provide a score (1-5) that reflects the level of detail and specificity included in the scenario. Higher scores should be awarded to scenarios that offer concrete numbers for user loads, specific configurations for the test environment, and clear definitions of success and failure thresholds. Specificity in metrics and detailed steps for test execution are essential.",
    "Professional Standard Score": "Assess the professionalism and adherence to industry best practices (1-5). A high score indicates that the scenario is crafted in a clear, structured, and concise manner that would meet industry expectations, reflecting a thorough understanding of performance and load testing as per ISTQB guidelines."
  },
  "test_instruction_elements_and_prompts": {
    "Scenario Context Verification": "Ensure that each generated scenario directly corresponds to the specified context and purpose of performance and load testing as outlined in the document. If a reference number is associated with a line or section, include it in the scenario as 'DocRef.' If no reference is provided, label it as 'NoRef' for tracking.",
    "Relevance and Completeness Check": "Confirm that each scenario includes essential elements such as objective, preconditions, user load distribution, key performance metrics, and expected outcomes. Scenarios lacking any critical component should be flagged as 'Incomplete,' with an indication of the missing elements in the output.",
    "Consistency and Alignment Verification": "Assess the scenario's alignment with the intended test category (performance and load) and ensure it reflects the overall testing goals specified in the document. Any inconsistencies, such as mismatched metrics or off-target objectives, should be highlighted as 'Inconsistent' in the output with an explanation for review.",
    "Detail Verification": "Review each scenario for specificity in areas such as user load numbers, test environment configurations, and threshold definitions. Entries without concrete values should be flagged with 'NeedsDetail' to signal areas requiring further refinement.",
    "Professional and Structured Formatting": "Evaluate the scenario’s structure and clarity, ensuring it adheres to a professional standard of concise, technical language. Label scenarios that meet professional expectations with 'Formatted,' and flag those that require further refinement in structure or clarity as 'ReviseFormat.'"
  },
  "llm_output_judges_and_prompts": {
    "Relevance": "Assess whether the generated test scenario effectively evaluates the system's performance and load handling under various levels of stress, simulating realistic user behaviors and conditions as specified in the prompt. Provide a score (1-5) and a brief justification.",
    "Completeness": "Evaluate if the scenario includes all essential components for performance and load testing, such as user load details (distribution, behavior patterns), key performance metrics (response time, throughput, resource utilization, error rates), necessary preconditions, environment configurations, and expected outcomes. Provide a score (1-5) and specify any missing elements.",
    "Consistency": "Determine if the scenario maintains consistency across its objectives, test steps, and expected results, aligning with performance and load testing standards and ISTQB guidelines. Check if the test steps accurately reflect the intended load conditions and performance metrics. Provide a True/False verdict and explain any inconsistencies.",
    "Professionalism": "Assess the scenario's adherence to professional standards in terms of structure, language, and clarity, specifically for performance and load testing. Consider if the scenario effectively communicates the testing process and performance expectations. Provide a score (1-5) and suggest improvements if necessary."
  },
  "test_case_main_prompt": "Acting as a senior ISTQB-certified test analyst, design a comprehensive set of performance and load test cases to evaluate the system's ability to handle various levels of stress. Ensure that the test cases cover response time, throughput, scalability, and stability under different load conditions. Include preconditions, detailed execution steps, specific input data, and measurable expected outcomes for each scenario. Align all test cases with ISTQB performance testing guidelines to validate both typical and edge performance conditions. Emphasize precision, accuracy, and reproducibility in test documentation.",
  "test_case_create_prompts": {
    "Core Performance Test Case": "Develop a test case to verify the system's ability to handle normal operational loads. Include typical user behavior as input, preconditions for environment setup, and measurable metrics such as response time and system throughput. Ensure test steps simulate realistic user actions and specify precise success criteria.",
    "Stress Test Case": "Create a test case to evaluate how the system behaves under extreme stress, such as peak user loads or resource exhaustion. Include detailed steps for incrementally increasing load, monitoring system behavior, and identifying failure points. Specify thresholds for acceptable and critical performance levels.",
    "Scalability Test Case": "Design a test case to assess the system's ability to scale with increasing workload. Include steps to simulate user growth, resource allocation adjustments, and infrastructure elasticity. Define metrics like maximum concurrent users or transactions per second.",
    "Resource Utilization Test Case": "Create a test case focusing on system resource usage under varying load conditions. Specify steps to measure CPU, memory, disk I/O, and network bandwidth. Include scenarios for detecting bottlenecks and provide acceptable utilization thresholds."
  }
},
{
  "_id": {
    "$oid": "6732fb8abb7182490b5d6551"
  },
  "test_name": "Edge Cases and Boundary Testing",
  "test_prompt": "Acting as a senior ISTQB-certified test analyst, design detailed test scenarios focused on evaluating the system's response to edge cases and boundary values. The scenario should explore how the system behaves at the extremes of input ranges, identifying potential vulnerabilities and ensuring reliability. Clearly define the purpose of the test, necessary preconditions, and environment configurations to create accurate testing conditions. Specify a range of test cases, including boundary values (just below, at, and just above limits) and edge cases that challenge system assumptions. Describe the expected outcomes for each case, detailing system responses, error handling, or corrective measures as needed. Outline the test steps, ensuring they capture all critical values for each parameter. Emphasize that the scenario aligns with ISTQB standards for boundary testing, aiming to identify weaknesses and ensure robustness against extreme inputs.",
  "test_scoring_elements_and_prompts": {
    "Test Scenario Quality Score": "Assign a score (1-5) based on the scenario’s relevance, clarity, and depth. A high-quality scenario should align with the test purpose, providing a clear objective and structured approach. It should include essential elements such as boundary value examples, edge cases, expected outcomes, and specific error handling requirements.",
    "Output Alignment Score": "Evaluate how well the generated output aligns with the expected scenario type (1-5). This score should reflect the output’s adherence to a structured, ISTQB-like format for edge cases and boundary testing, including elements like precise boundary values, error handling expectations, and critical input limits.",
    "Consistency Score": "Rate the consistency (True/False) between the generated scenario, its objectives, and its category. A consistent scenario should maintain alignment across all elements, ensuring that the described test steps, boundary values, and expected outcomes match the intended category and testing standards for boundary and edge case evaluation.",
    "Detail and Specificity Score": "Provide a score (1-5) that reflects the level of detail and specificity included in the scenario. Higher scores should be awarded to scenarios that provide concrete boundary values, clear definitions of acceptable limits, and detailed error handling for edge cases. Specificity in test data and expected results is essential for robust testing.",
    "Professional Standard Score": "Assess the professionalism and adherence to industry best practices (1-5). A high score indicates that the scenario is crafted in a clear, structured, and concise manner that would meet industry expectations, reflecting a thorough understanding of boundary and edge case testing as per ISTQB guidelines."
  },
  "test_instruction_elements_and_prompts": {
    "Scenario Context Verification": "Ensure that each generated scenario directly corresponds to the specified context and purpose of boundary and edge case testing as outlined in the document. If a reference number is associated with a line or section, include it in the scenario as 'DocRef.' If no reference is provided, label it as 'NoRef' for tracking.",
    "Relevance and Completeness Check": "Confirm that each scenario includes essential elements such as objective, preconditions, boundary values, edge cases, and expected outcomes. Scenarios lacking any critical component should be flagged as 'Incomplete,' with an indication of the missing elements in the output.",
    "Consistency and Alignment Verification": "Assess the scenario's alignment with the intended test category (boundary and edge cases) and ensure it reflects the overall testing goals specified in the document. Any inconsistencies, such as mismatched objectives or irrelevant steps, should be highlighted as 'Inconsistent' in the output with an explanation for review.",
    "Detail Verification": "Review each scenario for specificity in areas such as boundary values, edge case examples, and error expectations. Entries without concrete values should be flagged with 'NeedsDetail' to signal areas requiring further refinement.",
    "Professional and Structured Formatting": "Evaluate the scenario’s structure and clarity, ensuring it adheres to a professional standard of concise, technical language. Label scenarios that meet professional expectations with 'Formatted,' and flag those that require further refinement in structure or clarity as 'ReviseFormat.'"
  },
  "llm_output_judges_and_prompts": {
    "Relevance": "Assess whether the generated test scenario effectively targets edge cases and boundary values, exploring system behavior at the extremes of input ranges as specified in the prompt. Provide a score (1-5) and a brief justification.",
    "Completeness": "Evaluate if the scenario includes all essential components for edge case and boundary testing, such as specific boundary values (just below, at, and just above limits), detailed preconditions, test steps, and expected outcomes for each case. Provide a score (1-5) and specify any missing elements.",
    "Consistency": "Determine if the scenario maintains consistency across its objectives, test steps, and expected results, aligning with boundary testing standards and ISTQB guidelines. Check if the test steps correspond correctly to the specified boundary values. Provide a True/False verdict and explain any inconsistencies.",
    "Professionalism": "Assess the scenario's adherence to professional standards in terms of structure, language, and clarity, specifically for boundary testing. Consider if the scenario clearly communicates the test conditions and expectations. Provide a score (1-5) and suggest improvements if necessary."
  },
  "test_case_main_prompt": "Acting as a senior ISTQB-certified test analyst, create a detailed set of test cases to evaluate system behavior under edge case scenarios and at boundary input values. Include preconditions, specific test data for both lower and upper limits, and steps to assess how the system handles inputs outside the expected range. Ensure scenarios include both positive and negative test cases to validate robustness and reliability. Align test cases with ISTQB boundary testing guidelines for comprehensive validation of system behavior.",
  "test_case_create_prompts": {
    "Boundary Value Analysis Test Case": "Design a test case focusing on testing inputs at the boundaries of acceptable ranges. Specify lower and upper limits, just below and above these limits, and expected outcomes for each condition. Include clear steps for validating the system's response to each input.",
    "Extreme Input Test Case": "Create a test case to evaluate system performance and stability when handling extreme or unrealistic input values. Define test data that pushes the system beyond its designed operational range, specifying the expected error messages or graceful degradation responses.",
    "Null and Empty Input Test Case": "Develop a test case to assess system behavior when null or empty inputs are provided. Include detailed steps to simulate such inputs and expected outcomes, such as validation error messages or fallback defaults.",
    "Invalid Format Test Case": "Create a test case to evaluate the system's validation mechanisms when inputs are provided in incorrect formats. Include examples such as malformed dates, special characters in numeric fields, or overly long strings, and specify expected error handling outcomes."
  }
},
{
  "_id": {
    "$oid": "6732fb8abb7182490b5d6550"
  },
  "test_name": "Compatibility Testing",
  "test_prompt": "Acting as a senior ISTQB-certified test analyst, design comprehensive test scenarios to evaluate the compatibility of a specified system across different environments. This scenario should focus on assessing the system’s ability to function as expected on various platforms, devices, operating systems, browsers, and configurations. Clearly outline the purpose of the test, including the preconditions and environmental setups required for accurate testing across multiple platforms. Specify a range of environments, such as specific operating system versions, browser types, device specifications, screen resolutions, and hardware configurations, ensuring broad coverage. Describe the expected outcomes for each environment, identifying potential compatibility issues, or visual rendering differences. Detail test steps that simulate user behavior in each environment to validate consistent performance. Emphasize that the scenario aligns with ISTQB compatibility testing standards, prioritizing cross-environment consistency, reliability, and user experience.",
  "test_scoring_elements_and_prompts": {
    "Test Scenario Quality Score": "Assign a score (1-5) based on the scenario’s relevance, clarity, and depth. A high-quality scenario should align with the test purpose, providing a clear objective, structured approach, and including essential elements such as environment configurations, expected outcomes, and compatibility criteria.",
    "Output Alignment Score": "Evaluate how well the generated output aligns with the expected scenario type (1-5). This score should reflect the output’s adherence to a structured, ISTQB-like format for compatibility testing, including specific platform details, and cross-environment checks.",
    "Consistency Score": "Rate the consistency (True/False) between the generated scenario, its objectives, and its category. A consistent scenario should maintain alignment across all elements, ensuring that the described test steps, environment configurations, and expected outcomes match the intended category and testing standards for compatibility evaluation.",
    "Detail and Specificity Score": "Provide a score (1-5) that reflects the level of detail and specificity included in the scenario. Higher scores should be awarded to scenarios that offer concrete configurations (such as operating system versions, browser types), detailed expected results, and identified compatibility metrics.",
    "Professional Standard Score": "Assess the professionalism and adherence to industry best practices (1-5). A high score indicates that the scenario is crafted in a clear, structured, and concise manner that would meet industry expectations, reflecting a thorough understanding of compatibility testing as per ISTQB guidelines."
  },
  "test_instruction_elements_and_prompts": {
    "Scenario Context Verification": "Ensure that each generated scenario directly corresponds to the specified context and purpose of compatibility testing as outlined in the document. If a reference number is associated with a line or section, include it in the scenario as 'DocRef.' If no reference is provided, label it as 'NoRef' for tracking.",
    "Relevance and Completeness Check": "Confirm that each scenario includes essential elements such as objective, preconditions, environment configurations, expected outcomes, and compatibility checks. Scenarios lacking any critical component should be flagged as 'Incomplete,' with an indication of the missing elements in the output.",
    "Consistency and Alignment Verification": "Assess the scenario's alignment with the intended test category (compatibility) and ensure it reflects the overall testing goals specified in the document. Any inconsistencies, such as mismatched objectives or irrelevant configurations, should be highlighted as 'Inconsistent' in the output with an explanation for review.",
    "Detail Verification": "Review each scenario for specificity in areas such as platform versions, environment configurations, and expected responses. Entries without concrete values should be flagged with 'NeedsDetail' to signal areas requiring further refinement.",
    "Professional and Structured Formatting": "Evaluate the scenario’s structure and clarity, ensuring it adheres to a professional standard of concise, technical language. Label scenarios that meet professional expectations with 'Formatted,' and flag those that require further refinement in structure or clarity as 'ReviseFormat.'"
  },
  "llm_output_judges_and_prompts": {
    "Relevance": "Assess whether the generated test scenario effectively addresses compatibility testing across different environments as specified in the prompt. Consider if it includes testing on various platforms, devices, operating systems, browsers, and configurations. Provide a score (1-5) and a brief justification.",
    "Completeness": "Evaluate if the scenario includes all essential components for compatibility testing, such as detailed environment configurations, preconditions, test steps simulating user behavior on different platforms, and expected outcomes for each environment. Provide a score (1-5) and specify any missing elements.",
    "Consistency": "Determine if the scenario maintains consistency across its objectives, test steps, and expected results, aligning with compatibility testing standards and ISTQB guidelines. Check if the test steps and expected outcomes match the specified environments and configurations. Provide a True/False verdict and explain any inconsistencies.",
    "Professionalism": "Assess the scenario's adherence to professional standards in terms of structure, language, and clarity, specifically for compatibility testing. Consider if the scenario is clearly organized, uses technical language appropriately, and provides precise details. Provide a score (1-5) and suggest improvements if necessary."
  },
  "test_case_main_prompt": "As a senior ISTQB-certified test analyst, design a comprehensive set of compatibility test cases to evaluate the across different platforms, devices, operating systems, and browsers. Specify preconditions, test steps, and expected outcomes for each scenario. Ensure the cases assess cross-platform consistency, and visual rendering. Align with ISTQB compatibility testing standards to ensure the system provides a seamless user experience in diverse environments.",
  "test_case_create_prompts": {
    "Cross-Browser Test Case": "Create a test case to ensure consistency across multiple web browsers and their versions. Specify preconditions, browser configurations, detailed steps for validation, and expected outputs for compatibility verification.",
    "Device Compatibility Test Case": "Develop a test case to evaluate system behavior on a variety of devices, such as smartphones, tablets, and desktops. Include steps to verify responsive design and integrition across device specifications.",
    "Operating System Compatibility Test Case": "Design a test case to assess system performance on different operating systems, including specific versions. Include steps to test installation, execution, and interoperability between OS-specific features.",
    "Screen Resolution Test Case": "Create a test case to validate the system's responsiveness and layout consistency across various screen resolutions. Include steps for testing visual elements and alignment across resolutions."
  }
},
{
  "_id": {
    "$oid": "6732fb8abb7182490b5d6555"
  },
  "test_name": "Security Testing",
  "test_prompt": "Acting as a senior ISTQB-certified test analyst, design a comprehensive security test scenario aimed at evaluating the system’s resilience against various security threats. The scenario should focus on identifying vulnerabilities, ensuring data protection, and validating access controls within the specified system. Clearly define the purpose of the test, including the preconditions, environment configurations, and user roles required to simulate realistic security conditions. Identify key areas to be tested, such as authentication, authorization, data encryption, input validation, session management, and error handling. Outline test steps that cover common security tests such as SQL injection, XSS, CSRF, brute-force attacks, and privilege escalation attempts. Describe the expected outcomes for each test, including the system’s response to attempted breaches, error messages, and any logging requirements. Emphasize that the scenario aligns with ISTQB security testing standards, focusing on thorough vulnerability detection, data integrity, and system robustness against unauthorized access.",
  "test_scoring_elements_and_prompts": {
    "Test Scenario Quality Score": "Assign a score (1-5) based on the scenario’s relevance, clarity, and depth. A high-quality scenario should align with the test purpose, providing a clear objective and structured approach. It should include essential elements such as preconditions, security vulnerabilities to test, expected outcomes, and error handling mechanisms.",
    "Output Alignment Score": "Evaluate how well the generated output aligns with the expected scenario type (1-5). This score should reflect the output’s adherence to a structured, ISTQB-like format for security testing, including elements like specific security threats, test steps, and expected defensive responses.",
    "Consistency Score": "Rate the consistency (True/False) between the generated scenario, its objectives, and its category. A consistent scenario should maintain alignment across all elements, ensuring that the described test steps, security vulnerabilities, and expected outcomes match the intended security testing standards.",
    "Detail and Specificity Score": "Provide a score (1-5) that reflects the level of detail and specificity included in the scenario. Higher scores should be awarded to scenarios that offer concrete security threat examples, detailed test steps, and clear expected outcomes for each threat. Specificity in vulnerability descriptions and system responses is essential for robust security testing.",
    "Professional Standard Score": "Assess the professionalism and adherence to industry best practices (1-5). A high score indicates that the scenario is crafted in a clear, structured, and concise manner that would meet industry expectations, reflecting a thorough understanding of security testing as per ISTQB guidelines."
  },
  "test_instruction_elements_and_prompts": {
    "Scenario Context Verification": "Ensure that each generated scenario directly corresponds to the specified context and purpose of security testing as outlined in the document. If a reference number is associated with a line or section, include it in the scenario as 'DocRef.' If no reference is provided, label it as 'NoRef' for tracking.",
    "Relevance and Completeness Check": "Confirm that each scenario includes essential elements such as objective, preconditions, security vulnerabilities, expected outcomes, and error handling. Scenarios lacking any critical component should be flagged as 'Incomplete,' with an indication of the missing elements in the output.",
    "Consistency and Alignment Verification": "Assess the scenario's alignment with the intended test category (security) and ensure it reflects the overall testing goals specified in the document. Any inconsistencies, such as mismatched objectives or irrelevant test steps, should be highlighted as 'Inconsistent' in the output with an explanation for review.",
    "Detail Verification": "Review each scenario for specificity in areas such as vulnerability descriptions, expected results, and error handling requirements. Entries without concrete values should be flagged with 'NeedsDetail' to signal areas requiring further refinement.",
    "Professional and Structured Formatting": "Evaluate the scenario’s structure and clarity, ensuring it adheres to a professional standard of concise, technical language. Label scenarios that meet professional expectations with 'Formatted,' and flag those that require further refinement in structure or clarity as 'ReviseFormat.'"
  },
  "llm_output_judges_and_prompts": {
    "Relevance": "Assess whether the generated test scenario effectively evaluates the system's resilience against security threats, focusing on identifying vulnerabilities and validating access controls as specified in the prompt. Provide a score (1-5) and a brief justification.",
    "Completeness": "Evaluate if the scenario includes all essential components for security testing, such as specific security vulnerabilities to test (e.g., SQL injection, XSS, CSRF), necessary preconditions, user roles, test steps, expected system responses, and error handling mechanisms. Provide a score (1-5) and specify any missing elements.",
    "Consistency": "Determine if the scenario maintains consistency across its objectives, test steps, and expected results, aligning with security testing standards and ISTQB guidelines. Ensure that the security threats and test steps correspond correctly to the objectives. Provide a True/False verdict and explain any inconsistencies.",
    "Professionalism": "Assess the scenario's adherence to professional standards in terms of structure, language, and clarity, specifically for security testing. Consider if the scenario is detailed, well-structured, and uses appropriate security terminology. Provide a score (1-5) and suggest improvements if necessary."
  },
  "test_case_main_prompt": "Acting as a senior ISTQB-certified test analyst, design a comprehensive set of security test cases to evaluate the system's resilience against threats. Include scenarios for testing authentication, input validation, data encryption, and unauthorized access prevention. Each test case should include detailed preconditions, steps to simulate security vulnerabilities, and expected outcomes. Align all test cases with ISTQB security testing guidelines to ensure thorough validation of system security measures.",
  "test_case_create_prompts": {
    "Authentication Test Case": "Create a test case to verify the robustness of the system's authentication mechanism, including password strength requirements and protection against brute-force attacks.",
    "Input Validation Security Test Case": "Develop a test case to test for vulnerabilities such as SQL injection, XSS, or CSRF attacks by providing malicious input. Specify expected outcomes like rejection of input and secure logging.",
    "Data Encryption Test Case": "Design a test case to assess the effectiveness of encryption for sensitive data during transmission and storage. Specify tools and methods to verify encryption implementation.",
    "Access Control Test Case": "Create a test case to ensure access control policies are enforced correctly, preventing unauthorized users from accessing restricted features or data."
  }
},
{
  "_id": {
    "$oid": "6732fb8abb7182490b5d6553"
  },
  "test_name": "Integration Testing",
  "test_prompt": "Acting as a senior ISTQB-certified test analyst, design a comprehensive integration test scenario aimed at evaluating how different modules or components of a specified system interact with each other. This scenario should focus on ensuring that integrated components communicate correctly and work together. Clearly outline the purpose of the test, specifying necessary preconditions, setup configurations, and initial data required. Identify key interactions between components, including input and output data flow, dependencies, and any shared resources. Outline test steps that simulate realistic data exchange and process flows between components, capturing both normal and abnormal interaction patterns. Describe expected outcomes for each interaction, including response times, data integrity, and error handling requirements. Emphasize that the scenario aligns with ISTQB integration testing standards, focusing on accuracy, consistency, and robustness in component interaction validation.",
  "test_scoring_elements_and_prompts": {
    "Test Scenario Quality Score": "Assign a score (1-5) based on the scenario’s relevance, clarity, and depth. A high-quality scenario should align with the test purpose, providing a clear objective and structured approach. It should include essential elements such as preconditions, data flow between components, expected outcomes, and error handling mechanisms.",
    "Output Alignment Score": "Evaluate how well the generated output aligns with the expected scenario type (1-5). This score should reflect the output’s adherence to a structured, ISTQB-like format for integration testing, including specific component interactions, data exchange, and expected results.",
    "Consistency Score": "Rate the consistency (True/False) between the generated scenario, its objectives, and its category. A consistent scenario should maintain alignment across all elements, ensuring that the described test steps, component interactions, and expected outcomes match the intended integration testing standards.",
    "Detail and Specificity Score": "Provide a score (1-5) that reflects the level of detail and specificity included in the scenario. Higher scores should be awarded to scenarios that include concrete component interactions, detailed data flows, and clear expected outcomes for each integration point. Specificity in data handling and error scenarios is essential for thorough integration testing.",
    "Professional Standard Score": "Assess the professionalism and adherence to industry best practices (1-5). A high score indicates that the scenario is crafted in a clear, structured, and concise manner that would meet industry expectations, reflecting a thorough understanding of integration testing as per ISTQB guidelines."
  },
  "test_instruction_elements_and_prompts": {
    "Scenario Context Verification": "Ensure that each generated scenario directly corresponds to the specified context and purpose of integration testing as outlined in the document. If a reference number is associated with a line or section, include it in the scenario as 'DocRef.' If no reference is provided, label it as 'NoRef' for tracking.",
    "Relevance and Completeness Check": "Confirm that each scenario includes essential elements such as objective, preconditions, data flow between components, expected outcomes, and error handling. Scenarios lacking any critical component should be flagged as 'Incomplete,' with an indication of the missing elements in the output.",
    "Consistency and Alignment Verification": "Assess the scenario's alignment with the intended test category (integration) and ensure it reflects the overall testing goals specified in the document. Any inconsistencies, such as mismatched objectives or irrelevant test steps, should be highlighted as 'Inconsistent' in the output with an explanation for review.",
    "Detail Verification": "Review each scenario for specificity in areas such as component interactions, expected results, and error handling mechanisms. Entries without concrete values should be flagged with 'NeedsDetail' to signal areas requiring further refinement.",
    "Professional and Structured Formatting": "Evaluate the scenario’s structure and clarity, ensuring it adheres to a professional standard of concise, technical language. Label scenarios that meet professional expectations with 'Formatted,' and flag those that require further refinement in structure or clarity as 'ReviseFormat.'"
  },
  "llm_output_judges_and_prompts": {
    "Relevance": "Assess whether the generated test scenario effectively evaluates the interactions between different modules or components of the system, focusing on data flow and communication between components as specified in the prompt. Provide a score (1-5) and a brief justification.",
    "Completeness": "Evaluate if the scenario includes all essential components for integration testing, such as detailed component interactions, necessary preconditions, data exchange processes, dependencies, shared resources, and expected outcomes for each interaction. Provide a score (1-5) and specify any missing elements.",
    "Consistency": "Determine if the scenario maintains consistency across its objectives, test steps, and expected results, aligning with integration testing standards and ISTQB guidelines. Ensure that the interactions between components are correctly represented and that expected outcomes are properly defined. Provide a True/False verdict and explain any inconsistencies.",
    "Professionalism": "Assess the scenario's adherence to professional standards in terms of structure, language, and clarity, specifically for integration testing. Consider if the scenario clearly outlines component interactions and is structured logically. Provide a score (1-5) and suggest improvements if necessary."
  },
  "test_case_main_prompt": "As a senior ISTQB-certified test analyst, generate a set of integration test cases to evaluate interactions between system components. Include detailed preconditions, interaction sequences, and data flow verification steps. Focus on validating module communication, data consistency, and error handling. Ensure the test cases align with ISTQB integration testing standards.",
  "test_case_create_prompts": {
    "Interface Communication Test Case": "Develop a test case to validate communication between integrated components, ensuring proper data exchange and synchronization. Include scenarios for both normal and interrupted communication.",
    "Data Consistency Test Case": "Create a test case to verify that data remains consistent when shared or transferred between modules. Specify test steps for simulating updates, deletions, and retrievals.",
    "Shared Resource Access Test Case": "Design a test case to assess how integrated components handle access to shared resources, avoiding conflicts or deadlocks. Include test steps for concurrent access scenarios.",
    "Error Propagation Test Case": "Create a test case to evaluate the system’s ability to handle and isolate errors in one component without affecting others. Include scenarios to test error logging and recovery mechanisms."
  }
},
{
  "_id": {
    "$oid": "6732fb8abb7182490b5d6556"
  },
  "test_name": "User Interface (GUI) Testing",
  "test_prompt": "Acting as a senior ISTQB-certified test analyst, design a comprehensive GUI test scenario to evaluate the usability, responsiveness, and visual consistency of the user interface for a specified system. This scenario should focus on ensuring that the interface meets design specifications and provides a seamless user experience. Clearly outline the purpose of the test, specifying necessary preconditions, screen resolutions, and device configurations required. Identify key UI elements to be tested, such as buttons, menus, text fields, alignment, colors, font sizes, and responsiveness across different devices. Describe test steps that include checking the interface's layout, navigation flow, interaction feedback, and responsiveness to user inputs. Define expected outcomes for each interaction, including alignment, visual feedback, error messages, and responsiveness criteria. Emphasize that the scenario aligns with ISTQB GUI testing standards, focusing on visual accuracy, and user experience quality.",
  "test_scoring_elements_and_prompts": {
    "Test Scenario Quality Score": "Assign a score (1-5) based on the scenario’s relevance, clarity, and depth. A high-quality scenario should align with the test purpose, providing a clear objective and structured approach. It should include essential elements such as preconditions, UI elements, expected outcomes, and visual consistency checks.",
    "Output Alignment Score": "Evaluate how well the generated output aligns with the expected scenario type (1-5). This score should reflect the output’s adherence to a structured, ISTQB-like format for GUI testing, including elements like specific UI components, visual feedback expectations, and responsiveness requirements.",
    "Consistency Score": "Rate the consistency (True/False) between the generated scenario, its objectives, and its category. A consistent scenario should maintain alignment across all elements, ensuring that the described test steps, UI elements, and expected outcomes match the intended GUI testing standards.",
    "Detail and Specificity Score": "Provide a score (1-5) that reflects the level of detail and specificity included in the scenario. Higher scores should be awarded to scenarios that offer concrete examples for UI elements, detailed test steps, and clear expected results. Specificity in layout checks, responsiveness, and user feedback is essential for comprehensive GUI testing.",
    "Professional Standard Score": "Assess the professionalism and adherence to industry best practices (1-5). A high score indicates that the scenario is crafted in a clear, structured, and concise manner that would meet industry expectations, reflecting a thorough understanding of GUI testing as per ISTQB guidelines."
  },
  "test_instruction_elements_and_prompts": {
    "Scenario Context Verification": "Ensure that each generated scenario directly corresponds to the specified context and purpose of GUI testing as outlined in the document. If a reference number is associated with a line or section, include it in the scenario as 'DocRef.' If no reference is provided, label it as 'NoRef' for tracking.",
    "Relevance and Completeness Check": "Confirm that each scenario includes essential elements such as objective, preconditions, UI components, expected outcomes, and visual consistency checks. Scenarios lacking any critical component should be flagged as 'Incomplete,' with an indication of the missing elements in the output.",
    "Consistency and Alignment Verification": "Assess the scenario's alignment with the intended test category (GUI) and ensure it reflects the overall testing goals specified in the document. Any inconsistencies, such as mismatched objectives or irrelevant UI elements, should be highlighted as 'Inconsistent' in the output with an explanation for review.",
    "Detail Verification": "Review each scenario for specificity in areas such as UI elements, layout expectations, and visual feedback. Entries without concrete values should be flagged with 'NeedsDetail' to signal areas requiring further refinement.",
    "Professional and Structured Formatting": "Evaluate the scenario’s structure and clarity, ensuring it adheres to a professional standard of concise, technical language. Label scenarios that meet professional expectations with 'Formatted,' and flag those that require further refinement in structure or clarity as 'ReviseFormat.'"
  },
  "llm_output_judges_and_prompts": {
    "Relevance": "Assess whether the generated test scenario effectively evaluates the usability, responsiveness, and visual consistency of the user interface, focusing on UI elements and user experience as specified in the prompt. Provide a score (1-5) and a brief justification.",
    "Completeness": "Evaluate if the scenario includes all essential components for GUI testing, such as specific UI elements to be tested (buttons, menus, text fields), necessary preconditions (screen resolutions, device configurations), test steps, expected outcomes (alignment, visual feedback, responsiveness), and visual consistency checks. Provide a score (1-5) and specify any missing elements.",
    "Consistency": "Determine if the scenario maintains consistency across its objectives, test steps, and expected results, aligning with GUI testing standards and ISTQB guidelines. Check if the test steps accurately reflect the UI components and expected user interactions. Provide a True/False verdict and explain any inconsistencies.",
    "Professionalism": "Assess the scenario's adherence to professional standards in terms of structure, language, and clarity, specifically for GUI testing. Consider if the scenario effectively communicates the testing of UI elements and user experience aspects. Provide a score (1-5) and suggest improvements if necessary."
  },
  "test_case_main_prompt": "As a senior ISTQB-certified test analyst, create a comprehensive set of GUI test cases to validate usability, visual consistency, and responsiveness. Include preconditions, test steps, and expected outcomes for all UI elements. Ensure test cases cover navigation, layout alignment, input handling, and feedback mechanisms. Align with ISTQB GUI testing standards for a seamless and user-friendly experience.",
  "test_case_create_prompts": {
    "Visual Consistency Test Case": "Create a test case to ensure UI elements are visually consistent with design specifications across resolutions. Specify alignment, color schemes, and font size checks.",
    "Navigation Flow Test Case": "Develop a test case to verify the intuitiveness of the navigation flow, ensuring users can seamlessly move between pages and access features.",
    "Input Field Validation Test Case": "Design a test case to test input field behavior, including placeholder text, error messages, and constraints on input formats.",
    "Responsiveness Test Case": "Create a test case to evaluate how the UI adapts to different screen sizes and orientations. Specify steps to verify element repositioning and integration."
  }
},
{
  "_id": {
    "$oid": "6732fb8abb7182490b5d6552"
  },
  "test_name": "Input Data Variety Testing",
  "test_prompt": "Acting as a senior ISTQB-certified test analyst, design a comprehensive test scenario focused on assessing the system’s ability to handle a diverse range of input data. The scenario should evaluate how the system processes various data types, formats, edge cases, and outliers to ensure robust input handling. Clearly define the purpose of the test, the preconditions required, and the environment configurations necessary for accurate testing. Specify a range of input data examples, including valid, invalid, boundary, and null values. Describe the expected system responses, detailing any validation errors, warnings, or specific handling methods required for each type of input. Outline test steps that simulate user behavior with different input scenarios to validate the system’s resilience. Emphasize that the scenario aligns with ISTQB testing standards, ensuring a thorough assessment of data handling robustness and consistency.",
  "test_scoring_elements_and_prompts": {
    "Test Scenario Quality Score": "Assign a score (1-5) based on the scenario’s relevance, clarity, and depth. A high-quality scenario should align with the test purpose, providing a clear objective, structured approach, and including all necessary elements such as input data examples, expected outcomes, and error handling.",
    "Output Alignment Score": "Evaluate how well the generated output aligns with the expected scenario type (1-5). This score should reflect the output’s adherence to a structured, ISTQB-like format for input variety testing, including elements like specific data types, validation requirements, and error handling processes.",
    "Consistency Score": "Rate the consistency (True/False) between the generated scenario, its objectives, and its category. A consistent scenario should maintain alignment across all elements, ensuring that the described test steps, data requirements, and expected outcomes match the intended category and testing standards for input variety evaluation.",
    "Detail and Specificity Score": "Provide a score (1-5) that reflects the level of detail and specificity included in the scenario. Higher scores should be awarded to scenarios that include concrete examples of various input data types, specific configurations for the test environment, and clear definitions of expected outcomes for each input category. Specificity in data validation requirements and error expectations is essential.",
    "Professional Standard Score": "Assess the professionalism and adherence to industry best practices (1-5). A high score indicates that the scenario is crafted in a clear, structured, and concise manner that would meet industry expectations, reflecting a thorough understanding of input data variety testing as per ISTQB guidelines."
  },
  "test_instruction_elements_and_prompts": {
    "Scenario Context Verification": "Ensure that each generated scenario directly corresponds to the specified context and purpose of input data variety testing as outlined in the document. If a reference number is associated with a line or section, include it in the scenario as 'DocRef.' If no reference is provided, label it as 'NoRef' for tracking.",
    "Relevance and Completeness Check": "Confirm that each scenario includes essential elements such as objective, preconditions, data examples (valid, invalid, boundary, null), and expected outcomes. Scenarios lacking any critical component should be flagged as 'Incomplete,' with an indication of the missing elements in the output.",
    "Consistency and Alignment Verification": "Assess the scenario's alignment with the intended test category (input data variety) and ensure it reflects the overall testing goals specified in the document. Any inconsistencies, such as mismatched objectives or irrelevant steps, should be highlighted as 'Inconsistent' in the output with an explanation for review.",
    "Detail Verification": "Review each scenario for specificity in areas such as input data examples, error expectations, and response definitions. Entries without concrete values should be flagged with 'NeedsDetail' to signal areas requiring further refinement.",
    "Professional and Structured Formatting": "Evaluate the scenario’s structure and clarity, ensuring it adheres to a professional standard of concise, technical language. Label scenarios that meet professional expectations with 'Formatted,' and flag those that require further refinement in structure or clarity as 'ReviseFormat.'"
  },
  "llm_output_judges_and_prompts": {
    "Relevance": "Assess whether the generated test scenario effectively evaluates the system's ability to handle a diverse range of input data, including valid, invalid, boundary, and null values, as specified in the prompt. Provide a score (1-5) and a brief justification.",
    "Completeness": "Evaluate if the scenario includes all essential components for input data variety testing, such as a range of input data examples, necessary preconditions, detailed test steps, expected system responses, validation errors, and error handling for each type of input. Provide a score (1-5) and specify any missing elements.",
    "Consistency": "Determine if the scenario maintains consistency across its objectives, test steps, and expected results, aligning with input data variety testing standards and ISTQB guidelines. Check if the test steps accurately reflect the diverse input data and expected outcomes. Provide a True/False verdict and explain any inconsistencies.",
    "Professionalism": "Assess the scenario's adherence to professional standards in terms of structure, language, and clarity, specifically for input data variety testing. Consider if the scenario effectively communicates the testing of different data types and their expected handling. Provide a score (1-5) and suggest improvements if necessary."
  },
  "test_case_main_prompt": "Acting as a senior ISTQB-certified test analyst, generate a comprehensive set of test cases to validate the system's ability to handle diverse input data types. Include scenarios for valid, invalid, null, and edge-case inputs. Specify detailed steps, expected outcomes, and validation criteria for each input type. Align all test cases with ISTQB testing guidelines to ensure the system’s robustness in input handling.",
  "test_case_create_prompts": {
    "Valid Input Test Case": "Create a test case to validate the system’s ability to process valid input data accurately. Include examples for various data types such as text, numbers, and dates.",
    "Invalid Input Test Case": "Develop a test case to test system behavior with invalid inputs, ensuring appropriate error messages or rejections are triggered.",
    "Boundary Input Test Case": "Design a test case to assess the system’s handling of input values at the boundaries of acceptable ranges, including just below and above these limits.",
    "Special Character Input Test Case": "Create a test case to evaluate how the system handles inputs with special characters, emojis, or unexpected symbols. Specify expected sanitization or rejection behaviors."
  }
},
{
  "_id": {
    "$oid": "673d7efca741904082541a61"
  },
  "test_name": "Functional Testing",
  "test_prompt": "Acting as a senior ISTQB-certified test analyst, design a detailed functional test scenario focused on evaluating the system’s core functionalities against specified requirements. This scenario should assess whether the system performs its intended operations correctly, meeting both functional specifications and expected user behaviors. Clearly define the purpose of the test, including necessary preconditions, setup configurations, and initial data required. Identify the primary functions to be tested, including input conditions, expected outputs, and any error-handling mechanisms. Outline specific test steps that simulate realistic user actions to validate each function. Describe the expected outcomes for each step, ensuring that both positive and negative cases are covered. Emphasize that the scenario aligns with ISTQB functional testing standards, aiming for accuracy, completeness, and robustness in functional validation.",
  "test_scoring_elements_and_prompts": {
    "Test Scenario Quality Score": "Assign a score (1-5) based on the scenario’s relevance, clarity, and depth. A high-quality scenario should align with the test purpose, providing a clear objective and structured approach. It should include essential elements such as preconditions, test steps, expected outcomes, and error handling requirements.",
    "Output Alignment Score": "Evaluate how well the generated output aligns with the expected scenario type (1-5). This score should reflect the output’s adherence to a structured, ISTQB-like format for functional testing, including elements like input conditions, functional checks, and expected results.",
    "Consistency Score": "Rate the consistency (True/False) between the generated scenario, its objectives, and its category. A consistent scenario should maintain alignment across all elements, ensuring that the described test steps, expected outcomes, and error-handling match the intended functional testing standards.",
    "Detail and Specificity Score": "Provide a score (1-5) that reflects the level of detail and specificity included in the scenario. Higher scores should be awarded to scenarios that offer concrete examples for inputs, clear test step definitions, and detailed expected results. Specificity in test data and expected outcomes is essential for robust functional testing.",
    "Professional Standard Score": "Assess the professionalism and adherence to industry best practices (1-5). A high score indicates that the scenario is crafted in a clear, structured, and concise manner that would meet industry expectations, reflecting a thorough understanding of functional testing as per ISTQB guidelines."
  },
  "test_instruction_elements_and_prompts": {
    "Scenario Context Verification": "Ensure that each generated scenario directly corresponds to the specified context and purpose of functional testing as outlined in the document. If a reference number is associated with a line or section, include it in the scenario as 'DocRef.' If no reference is provided, label it as 'NoRef' for tracking.",
    "Relevance and Completeness Check": "Confirm that each scenario includes essential elements such as objective, preconditions, input conditions, expected outputs, and error handling. Scenarios lacking any critical component should be flagged as 'Incomplete,' with an indication of the missing elements in the output.",
    "Consistency and Alignment Verification": "Assess the scenario's alignment with the intended test category (functional) and ensure it reflects the overall testing goals specified in the document. Any inconsistencies, such as mismatched objectives or irrelevant test steps, should be highlighted as 'Inconsistent' in the output with an explanation for review.",
    "Detail Verification": "Review each scenario for specificity in areas such as input conditions, expected results, and error handling. Entries without concrete values should be flagged with 'NeedsDetail' to signal areas requiring further refinement.",
    "Professional and Structured Formatting": "Evaluate the scenario’s structure and clarity, ensuring it adheres to a professional standard of concise, technical language. Label scenarios that meet professional expectations with 'Formatted,' and flag those that require further refinement in structure or clarity as 'ReviseFormat.'"
  },
  "llm_output_judges_and_prompts": {
    "Relevance": "Assess whether the generated test scenario effectively evaluates the system's core functionalities against the specified requirements, focusing on whether it tests intended operations and expected user behaviors as outlined in the prompt. Provide a score (1-5) and a brief justification.",
    "Completeness": "Evaluate if the scenario includes all essential components for functional testing, such as clear objectives, necessary preconditions, detailed test steps simulating realistic user actions, input conditions, expected outputs, and error handling mechanisms. Provide a score (1-5) and specify any missing elements.",
    "Consistency": "Determine if the scenario maintains consistency across its objectives, test steps, and expected results, aligning with functional testing standards and ISTQB guidelines. Ensure that the test steps are appropriate for the functionalities being tested and that expected outcomes are properly defined. Provide a True/False verdict and explain any inconsistencies.",
    "Professionalism": "Assess the scenario's adherence to professional standards in terms of structure, language, and clarity, specifically for functional testing. Consider if the scenario is well-organized, uses precise technical language, and provides clear instructions. Provide a score (1-5) and suggest improvements if necessary."
  },
  "test_case_create_prompts": {
    "Core Functionalities Test Case": "Create a test case that verifies the core functionalities of the system as defined in the requirements. Include preconditions, detailed steps, input data, and expected results to ensure the system performs its intended operations correctly. Ensure the case aligns with ISTQB Functional Testing guidelines. Specify each step's expected output clearly and concisely.",
    "Boundary Value Analysis Test Case": "Develop a test case focusing on Boundary Value Analysis (BVA) to evaluate system behavior at the edges of input ranges. Include preconditions, input data at lower and upper boundaries, and the expected system response for each scenario. Define clear test steps for validating boundary conditions, ensuring compliance with functional testing standards.",
    "Error Recovery Functional Test Case": "Design a test case to assess the system's error recovery mechanisms during normal operations. Include scenarios with invalid inputs, interruptions, or fault conditions. Specify detailed steps to simulate these scenarios and describe the expected system behavior for each step, including recovery or error handling outputs.",
    "User Input Validation Test Case": "Create a test case to validate the system's ability to handle various user inputs. Include valid, invalid, and edge-case inputs, with steps to simulate input actions and monitor system responses. Specify preconditions, detailed test steps, and expected outcomes to ensure the system handles inputs correctly and provides appropriate feedback for invalid inputs."
  },
  "test_case_main_prompt": "Acting as a senior ISTQB-certified test analyst, generate a comprehensive set of functional test cases based on the provided test scenario. Ensure that the test cases collectively cover all actions, steps, and functional areas outlined in the scenario. Each test case should include detailed descriptions of preconditions, input conditions, step-by-step actions, and expected outcomes. Cover positive, negative, and boundary cases to ensure complete validation of the system’s functionalities. Include specific checks for error handling and edge cases where applicable. Organize the test cases to ensure clarity and traceability, aligning with ISTQB standards. The goal is to produce the maximum number of test cases necessary to comprehensively validate the scenario while avoiding redundancy."
}]